version: "3.9"

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: authloc_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-authloc}
      POSTGRES_USER: ${DATABASE_USER:-authloc}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-authloc}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-authloc}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: authloc_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: authloc_django
    restart: unless-stopped
    command: /start
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    env_file:
      - .env
    ports:
      - "8000:8000"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: authloc_celery_worker
    restart: unless-stopped
    command: /start-celeryworker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
    env_file:
      - .env

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: authloc_celery_beat
    restart: unless-stopped
    command: /start-celerybeat
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
