# Generated by Cascade for initial search app models
from __future__ import annotations

import django.db.models.deletion
import django.utils.timezone
import uuid

from django.contrib.postgres.indexes import GinIndex
from django.contrib.postgres.search import SearchVectorField
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authentication", "0001_initial"),
        ("core", "0001_initial"),
        ("locations", "0001_initial"),
        ("audit", "0001_initial"),
        ("permissions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SearchQueryLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("query_text", models.CharField(max_length=500)),
                ("normalized_query", models.CharField(blank=True, max_length=500)),
                (
                    "target",
                    models.CharField(
                        choices=[
                            ("locations", "Locations"),
                            ("users", "Users"),
                            ("audit_logs", "Audit Logs"),
                            ("advanced", "Advanced"),
                        ],
                        max_length=32,
                    ),
                ),
                ("vector", SearchVectorField(null=True)),
                ("filters", models.JSONField(blank=True, default=dict)),
                ("result_count", models.PositiveIntegerField(default=0)),
                ("duration_ms", models.PositiveIntegerField(default=0)),
                ("executed_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("request_metadata", models.JSONField(blank=True, default=dict)),
                ("abandoned", models.BooleanField(default=False)),
                ("latency_ms", models.PositiveIntegerField(default=0)),
                ("performance_bucket", models.CharField(blank=True, max_length=32)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_searchquerylog_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_searchquerylog_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-executed_at",),
            },
        ),
        migrations.CreateModel(
            name="SearchResultClick",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("object_type", models.CharField(max_length=64)),
                ("object_id", models.CharField(max_length=64)),
                ("position", models.PositiveIntegerField(default=0)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_searchresultclick_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clicks",
                        to="search.searchquerylog",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_searchresultclick_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="PopularSearchTerm",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("query_text", models.CharField(max_length=500, unique=True)),
                ("normalized_query", models.CharField(blank=True, max_length=500)),
                ("total_count", models.PositiveIntegerField(default=0)),
                ("last_used_at", models.DateTimeField(auto_now=True)),
                ("average_duration_ms", models.FloatField(default=0.0)),
                ("last_result_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ("-total_count", "-last_used_at"),
            },
        ),
        migrations.AddIndex(
            model_name="searchquerylog",
            index=GinIndex(fields=["vector"], name="searchquerylog_vector_gin"),
        ),
        migrations.AddIndex(
            model_name="searchquerylog",
            index=models.Index(
                fields=["target", "executed_at"], name="searchquerylog_target_time"
            ),
        ),
        migrations.AddIndex(
            model_name="searchquerylog",
            index=models.Index(fields=["query_text"], name="searchquerylog_query_text_idx"),
        ),
        migrations.AddIndex(
            model_name="searchresultclick",
            index=models.Index(
                fields=["object_type", "created_at"], name="searchclick_object_type_time"
            ),
        ),
        migrations.AddIndex(
            model_name="searchresultclick",
            index=models.Index(fields=["query", "position"], name="searchclick_query_position"),
        ),
        migrations.AddIndex(
            model_name="popularsearchterm",
            index=models.Index(
                fields=["total_count", "last_used_at"], name="popularsearchterm_count_time"
            ),
        ),
    ]
